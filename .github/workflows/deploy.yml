name: デプロイ

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22.x'

jobs:
  predeploy:
    runs-on: ubuntu-latest
    environment: preview
    env:
      APP_ENV: ${{ secrets.APP_ENV }}
      APP_URL: ${{ secrets.APP_URL }}
      APP_DEBUG: ${{ secrets.APP_DEBUG }}
      APP_ANALYZE: ${{ secrets.APP_ANALYZE }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_DATABASE_ID: ${{ secrets.CLOUDFLARE_DATABASE_ID }}
      CLOUDFLARE_D1_TOKEN: ${{ secrets.CLOUDFLARE_D1_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci

      - run: npm run ci

      - run: npm run deploy:dry-run

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: predeploy
    environment: production
    env:
      APP_ENV: ${{ secrets.APP_ENV }}
      APP_URL: ${{ secrets.APP_URL }}
      APP_DEBUG: ${{ secrets.APP_DEBUG }}
      APP_ANALYZE: ${{ secrets.APP_ANALYZE }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_DATABASE_ID: ${{ secrets.CLOUDFLARE_DATABASE_ID }}
      CLOUDFLARE_D1_TOKEN: ${{ secrets.CLOUDFLARE_D1_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci

      - run: npm run deploy
